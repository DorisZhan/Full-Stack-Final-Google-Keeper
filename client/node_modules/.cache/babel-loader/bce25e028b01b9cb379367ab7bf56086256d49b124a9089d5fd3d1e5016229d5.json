{"ast":null,"code":"var _jsxFileName = \"/Users/yiyouchen/Documents/googlekeeper/client/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nfunction App() {\n  _s();\n  const [totnotes, setNotes] = useState([]);\n  const [noteInput, setNoteInput] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  //initialize the notes from database\n  useEffect(() => {\n    fetch('/NOTES/getAll').then(response => response.json()).then(data => {\n      setNotes(data);\n      //console.log(data);\n    }).catch(console.error);\n  }, []);\n  //type box state\n  function record(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNoteInput(currentInput => ({\n      ...currentInput,\n      [name]: value\n    }));\n  }\n  //add note state\n  function handleAdd() {\n    // event.preventDefault();\n    if (noteInput.title && noteInput.content) {\n      const req_options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(noteInput)\n      };\n      console.log(noteInput);\n      fetch('/api/AddNote', req_options).then(response => response.json()).then(data => {\n        //backend needs to return the data with id\n        setNotes(oldnotes => [...oldnotes, data]);\n        console.log('data added', data);\n        setNoteInput({\n          title: \"\",\n          content: \"\"\n        });\n      }).catch(console.error);\n    }\n  }\n  function handleDelete(noteKey) {\n    fetch('/api/' + noteKey, {\n      method: \"DELETE\"\n    }).then(() => {\n      setNotes(prev => prev.filter(note => note._id !== noteKey)); // Optimistically remove the note from state\n    }).catch(console.error);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    placeholder: \"Title\",\n    value: noteInput.title,\n    onChange: record,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    placeholder: \"Take a note...\",\n    rows: \"3\",\n    value: noteInput.content,\n    onChange: record,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Add\")), totnotes.map(note => /*#__PURE__*/React.createElement(Note\n  //key={note.key}\n  , {\n    id: note._id,\n    title: note.title,\n    content: note.content,\n    onDelete: () => handleDelete(note._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\n_s(App, \"qW4RCfyvCL4fNS68B8nhS2bOPFE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Footer","Note","App","_s","totnotes","setNotes","noteInput","setNoteInput","title","content","fetch","then","response","json","data","catch","console","error","record","event","name","value","target","currentInput","handleAdd","req_options","method","headers","body","JSON","stringify","log","oldnotes","handleDelete","noteKey","prev","filter","note","_id","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","rows","type","map","id","onDelete","_c","$RefreshReg$"],"sources":["/Users/yiyouchen/Documents/googlekeeper/client/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\n\n\nfunction App() {\n  const [totnotes, setNotes] = useState([]);\n  const [noteInput, setNoteInput] = useState({title: \"\", content: \"\" });\n    //initialize the notes from database\n  useEffect(() => {\n    fetch('/NOTES/getAll').then(\n      response => response.json()\n    ).then(\n      data => {\n        setNotes(data);\n        //console.log(data);\n  }).catch(console.error);\n  }, []);\n  //type box state\n  function record(event) {\n    const { name, value } = event.target;\n    setNoteInput((currentInput) => ({ ...currentInput, [name]: value }));\n  }\n  //add note state\n  function handleAdd() {\n    // event.preventDefault();\n    if (noteInput.title && noteInput.content) {\n      const req_options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(noteInput),\n      };\n      console.log(noteInput);\n      fetch('/api/AddNote', req_options)\n      .then(response => response.json())\n      .then(data => {  //backend needs to return the data with id\n        setNotes(oldnotes => [...oldnotes, data]);\n        console.log('data added', data);\n        setNoteInput({title: \"\", content: \"\"});\n      })\n      .catch(console.error);\n    }\n  }\n  \n  function handleDelete(noteKey) {\n    fetch('/api/'+noteKey, { method: \"DELETE\" })\n      .then(() => {\n        setNotes(prev => prev.filter(note => note._id !== noteKey));  // Optimistically remove the note from state\n      })\n      .catch(console.error);\n  }\n\n  return (\n    <div>\n      <Header />\n      <form onSubmit={handleAdd}>\n        <input\n          name=\"title\"\n          placeholder=\"Title\"\n          value={noteInput.title}\n          onChange={record}\n        />\n        <textarea\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n          value={noteInput.content}\n          onChange={record}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n      {totnotes.map((note) => (\n        <Note\n          //key={note.key}\n          id={note._id}\n          title={note.title}\n          content={note.content}\n          onDelete={() => handleDelete(note._id)}\n        />\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}